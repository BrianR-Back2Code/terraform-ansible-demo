---
# Playbook zur Konfiguration eines NGINX-Webservers

- name: Konfiguriere NGINX auf den Webservern
  hosts: webservers
  become: yes

  vars:
    nginx_site_template: "templates/nginx_site.conf.j2"
    website_name: "terraform-ansible-demo"
    website_domain: "example.com" # Nur f√ºr Demonstrationszwecke

  tasks:
    - name: Aktualisiere Paketlisten
      dnf:
        update_cache: yes
      changed_when: false

    - name: Alternative Methode - Aktiviere Amazon Extras (falls vorhanden)
      shell: amazon-linux-extras enable nginx1
      register: extras_result
      changed_when: extras_result.rc == 0
      failed_when: false

    - name: Installiere NGINX
      dnf:
        name: nginx
        state: present

    - name: Erstelle Webserver-Verzeichnis
      file:
        path: "/var/www/{{ website_name }}"
        state: directory
        owner: nginx
        group: nginx
        mode: "0755"

    - name: Stelle index.html bereit
      copy:
        src: index.html
        dest: "/var/www/{{ website_name }}/index.html"
        owner: nginx
        group: nginx
        mode: "0644"

    - name: Konfiguriere NGINX-Default-Site
      copy:
        dest: /etc/nginx/conf.d/default.conf
        content: |
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              
              root /var/www/{{ website_name }};
              index index.html;
              
              server_name _;
              
              location / {
                  try_files $uri $uri/ =404;
              }
          }
        owner: root
        group: root
        mode: "0644"
      notify: Restart NGINX

    - name: Starte NGINX und aktiviere beim Systemstart
      service:
        name: nginx
        state: started
        enabled: yes

  handlers:
    - name: Restart NGINX
      service:
        name: nginx
        state: restarted
